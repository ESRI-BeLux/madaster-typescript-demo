"use strict";(self.webpackChunkmadaster_typescript=self.webpackChunkmadaster_typescript||[]).push([[6960],{6960:(e,t,r)=>{r.r(t),r.d(t,{default:()=>M});var i=r(82392),a=r(80861),s=r(57725),n=r(37623),o=r(61985),h=r(81482),p=(r(6273),r(67498),r(26325)),u=r(8e3),d=r(3596),c=r(7511),m=r(7444),l=r(24775),y=r(30386),g=r(62991),x=r(41332),w=r(4046);const f=e=>{let t=class extends e{initialize(){this.exportImageParameters=new w.r({layer:this.layer})}destroy(){this.exportImageParameters=(0,s.pR)(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeaturesAtLocation(e,t){const{layer:r}=this;if(!e)throw new g.A("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:r});const{popupEnabled:i}=r;if(!i)throw new g.A("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:i});const a=this.createFetchPopupFeaturesQuery(e);if(!a)return[];const{extent:s,width:o,height:h,x:p,y:u}=a;if(!(s&&o&&h))throw new g.A("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:o,height:h});const d=await r.fetchFeatureInfo(s,o,h,p,u);return(0,n.Te)(t),d}};return(0,i._)([(0,h.MZ)()],t.prototype,"exportImageParameters",void 0),(0,i._)([(0,h.MZ)({readOnly:!0})],t.prototype,"exportImageVersion",null),(0,i._)([(0,h.MZ)()],t.prototype,"layer",void 0),(0,i._)([(0,h.MZ)(x.ui)],t.prototype,"timeExtent",void 0),t=(0,i._)([(0,p.$)("esri.layers.mixins.WMSLayerView")],t),t};let v=class extends(f((0,y.A)((0,c.e)(l.A)))){constructor(){super(...arguments),this.bitmapContainer=new d.l}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch((e=>{(0,n.zf)(e)||a.A.getLogger(this).error(e)}))}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:r}=e;this.bitmapContainer=new d.l,this.container.addChild(this.bitmapContainer),this.strategy=new m.A({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles((0,o.wB)((()=>this.exportImageVersion),(()=>this.requestUpdate())))}detach(){this.strategy=(0,s.pR)(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:r}=this,{x:i,y:a}=e,{spatialReference:s}=t;let n,o=0,h=0;if(r.children.some((e=>{const{width:t,height:r,resolution:p,x:d,y:c}=e,m=d+p*t,l=c-p*r;return i>=d&&i<=m&&a<=c&&a>=l&&(n=new u.A({xmin:d,ymin:l,xmax:m,ymax:c,spatialReference:s}),o=t,h=r,!0)})),!n)return null;const p=n.width/o,d=Math.round((i-n.xmin)/p),c=Math.round((n.ymax-a)/p);return{extent:n,width:o,height:h,x:d,y:c}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,i){return this.layer.fetchImageBitmap(e,t,r,{timeExtent:this.timeExtent,...i})}};(0,i._)([(0,h.MZ)()],v.prototype,"strategy",void 0),(0,i._)([(0,h.MZ)()],v.prototype,"updating",void 0),v=(0,i._)([(0,p.$)("esri.views.2d.layers.WMSLayerView2D")],v);const M=v}}]);